server:
  error:
    include-message: always
    include-stacktrace: never
  servlet:
    session:
      cookie:
        http-only: false
  port: 8081

logging:
  level:
    danekerscode.keremetchat: debug
    org.springframework:
      web.socket: debug
      web: DEBUG
      security: trace

spring:
  mail:
    host: ${SMTP_HOST}
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    port: 587
  main:
    banner-mode: off
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
    date-format: 'yyyy-MM-dd HH:mm:ss'
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        format_sql: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  cache:
    redis:
      time-to-live: 3600000
  session:
    timeout: 43200m
  liquibase:
    database-change-log-lock-table: db_changelog_lock
    database-change-log-table: db_changelog
    change-log: db/changelog/db.changelog-master.xml
    default-schema: keremet_chat
  security:
    oauth2:
      client:
        registration:
          github:
            common-provider-type: github
            provider: github
            client-name: GitHub
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - user:email
              - read:user
        provider:
          github:
            user-name-attribute: login
  datasource:
    username: postgres
    password: postgres
    url: jdbc:postgresql://localhost:5432/keremet_chat

app:
  cors:
    allowCredentials: true
    allowedOrigins: http://localhost:5173/,http://localhost:4200/
    allowedMethods: GET,POST,PUT,DELETE,OPTIONS,HEAD
    allowedHeaders: origin,content-type,accept,authorization,cookie
  minio:
    url: http://localhost:9000
    access-key: minioadmin
    secret-key: minioadmin
  open-api:
    info:
      title: Keremet Chat api documentation
      description: Full documentation of Keremet chat
      version: v0.0.1-SNAPSHOT
  websocket:
    allowed-origins: 'http://localhost:5173/'
  mail:
    verification-token-ttl: 3m
    sender: no-reply@keremet-chat.com
    verification-link-pattern: 'http://localhost:5173/auth/email/confirm?token=%s' # todo create react component to handle it
  security:
    basic-auth:
      password: keremetchat123
      username: danekerscode
      role: KEREMET_CHAT
    delete-inactive-users: false
    delete-inactive-users-cron: '0 0 0 * * *' # every day at midnight
    default-admin:
      email: 'keremetchatadmin@gmail.com'
      password: 'keremetchatadmin'

springdoc:
  show-oauth2-endpoints: true

management:
  endpoints:
    web.exposure.include: health,info,prometheus
  metrics:
    tags:
      application: ${spring.application.name}